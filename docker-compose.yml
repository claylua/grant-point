version: "3.9"

services:
  postgres:
    image: postgres:15-alpine
    container_name: grant-mesra-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-grant_mesra}
      POSTGRES_USER: ${POSTGRES_USER:-grant_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-grant_pass}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-grant_user} -d ${POSTGRES_DB:-grant_mesra}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./server
    container_name: grant-mesra-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql://${POSTGRES_USER:-grant_user}:${POSTGRES_PASSWORD:-grant_pass}@postgres:5432/${POSTGRES_DB:-grant_mesra}}
      SESSION_SECRET: ${SESSION_SECRET:-change-me}
      SETEL_IDENTIFIER: ${SETEL_IDENTIFIER:-replace-with-identifier}
      SETEL_PASSWORD: ${SETEL_PASSWORD:-replace-with-password}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-}
      LOG_DIRECTORY: /app/logs
      HTTPS_ENABLED: ${HTTPS_ENABLED:-false}
      HTTPS_PORT: ${HTTPS_PORT:-4443}
      HTTPS_KEY_PATH: ${HTTPS_KEY_PATH:-/app/certs/server.key}
      HTTPS_CERT_PATH: ${HTTPS_CERT_PATH:-/app/certs/server.crt}
      HTTPS_PASSPHRASE: ${HTTPS_PASSPHRASE:-}
    ports:
      - "4000:4000"
      - "${HTTPS_PORT:-4443}:${HTTPS_PORT:-4443}"
    volumes:
      - logs:/app/logs
      - ./server/certs:/app/certs:ro

volumes:
  db_data:
  logs:
